# GATK mutect2
# This pipeline describes how to run Mutect2 from GATK4.2.5, filter and annotation with VEP106


#!/bin/bash
source /etc/profile
#$ -S /bin/bash
#$ -pe pvm 8

module load /mnt/storage/spack/share/spack/modules/linux-ubuntu16.04-x86_64/gatk-4.2.5.0-gcc-5.4.0-tfxkdz3

# run mutect2 with gatk

gatk --java-options "-Xmx100G" Mutect2 \
-R /path/to/Homo_sapiens_assembly38.fasta \
-I /path/to/tumor.bam \
-tumor tumor_name \
-I /path/to/normal.bam \
-normal normal_name \
--germline-resource /path/to/af-only-gnomad.hg38.vcf.gz \
--panel-of-normals /path/to/PON.vcf \
--bam-output /path/to/bamout.bam \ # this step depends on FFPE samples, skip this step if it is standard WGS 
--f1r2-tar-gz /path/to/f1r2.tar.gz \
-O /path/to/somatic.vcf.gz

# for filtering-

# read oreintation filters

gatk LearnReadOrientationModel 
-I /path/to/f1r2.tar.gz 
-O /path/to/read-orientation-model.tar.gz \

# getpileup summaries for tumor 
gatk GetPileupSummaries \
-R /path/to/Homo_sapiens_assembly38.fasta \
-I /path/to/tumor.cram \
-V /path/to/small_exac_common_3.hg38.vcf.gz \
-L /path/to/small_exac_common_3.hg38.vcf.gz \
-O /path/to/tum_pileup.table \

# getpileup summaries for normal
# uses matched normal
gatk GetPileupSummaries \
-R /path/to/Homo_sapiens_assembly38.fasta \
-I /path/to/norm.cram \
-V /path/to/small_exac_common_3.hg38.vcf.gz \
-L /path/to/small_exac_common_3.hg38.vcf.gz \
-O /path/to/norm_pileup.table \

# calculate contamination and tumor segmentation
gatk CalculateContamination \
-I /path/to/tum_pileup.table \
-matched/path/to/norm_pileup.table \
-O /path/to/matched_contamination_table \
-tumor-segmentation /path/to/tum_segments.table \

# final filtering steps

gatk FilterMutectCalls \
-R /path/to/Homo_sapiens_assembly38.fasta \
-V /path/to/somatic.vcf.gz \
# -tumor-segmentation /path/to/tum_segments.table \
--contamination-table /path/to/matched_contamination_table \
--ob-priors /path/to/read-orientation-model.tar.gz \
-O /path/to/matched_somatic.vcf.gz

# from this filtered vcf, variant sites which are labelled as PASS are selected by using bcftools as those are the ones that have passed the filter 

module load /path/to/bcftools
bcftools view -i "%FILTER='PASS'" matched_somatic.vcf.gz > matched_somatic_filtered.vcf

# count the no. pass variants or analyze the stats using bcfstats

# annotate with VEP106 and output as tab
/path/to/ensembl-vep-release-106/vep \
-i /path/to/passed_somatic.vcf \
-o /path/to/passed_ann.tab \
--cache --offline --force_overwrite --tab --sift b --polyphen b --canonical --symbol --species homo_sapiens \
--fasta /path/to/Homo_sapiens_assembly38.fasta \
--dir /path/to/ensembl-vep-release-106/.vep/ --dir_cache /path/to/ensembl-vep-release-106/.vep/ \

# Note- if vcf output is prefered change from --tab to --vcf

## alternate annotation run by snpeff with gatk

java -Xmx8g -jar /path/to/snpEff_v4_3t/snpEff.jar \ 
-c /path/to/snpEff_v4_3t/snpEff.config \ 
-v hg38 /path/to/filtered_passed_seg_somatic4.2.vcf \
-o /path/to/passed_ann.vcf
